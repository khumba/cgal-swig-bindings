mode(-1);
exec(fullfile(get_absolute_file_path('sciloader.sce'), 'loader.sce'));

cgal = struct();
cgal.Bbox_2 = struct();
cgal.Bbox_2.new = new_Bbox_2;
cgal.Bbox_2.delete = delete_Bbox_2;
cgal.Bbox_2.equals = Bbox_2_EE;
cgal.Bbox_2.not_equals = Bbox_2_EN;
cgal.Bbox_2.deepcopy = Bbox_2_M1;
cgal.Bbox_2.dimension = Bbox_2_M2;
cgal.Bbox_2.max = Bbox_2_M3;
cgal.Bbox_2.min = Bbox_2_M4;
cgal.Bbox_2.plus = Bbox_2_MA;
cgal.Bbox_2.iplus = Bbox_2_NA;
cgal.Bbox_2.toString = Bbox_2_M5;
cgal.Bbox_2.xmax = Bbox_2_M6;
cgal.Bbox_2.xmin = Bbox_2_M7;
cgal.Bbox_2.ymax = Bbox_2_M8;
cgal.Bbox_2.ymin = Bbox_2_M9;
cgal.Bbox_3 = struct();
cgal.Bbox_3.new = new_Bbox_3;
cgal.Bbox_3.delete = delete_Bbox_3;
cgal.Bbox_3.equals = Bbox_3_EE;
cgal.Bbox_3.not_equals = Bbox_3_EN;
cgal.Bbox_3.deepcopy = Bbox_3_M1;
cgal.Bbox_3.dimension = Bbox_3_M2;
cgal.Bbox_3.max = Bbox_3_M3;
cgal.Bbox_3.min = Bbox_3_M4;
cgal.Bbox_3.plus = Bbox_3_MA;
cgal.Bbox_3.iplus = Bbox_3_NA;
cgal.Bbox_3.toString = Bbox_3_M5;
cgal.Bbox_3.xmax = Bbox_3_M6;
cgal.Bbox_3.xmin = Bbox_3_M7;
cgal.Bbox_3.ymax = Bbox_3_M8;
cgal.Bbox_3.ymin = Bbox_3_M9;
cgal.Bbox_3.zmax = Bbox_3_M10;
cgal.Bbox_3.zmin = Bbox_3_M11;

cgal.Direction_2 = struct();				
cgal.Direction_2.new = new_Direction_2;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Direction_2.delete = delete_Direction_2;
cgal.Direction_2.lt = Direction_2_CA;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Direction_2.le = Direction_2_CB;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Direction_2.gt = Direction_2_CC;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Direction_2.ge = Direction_2_CD;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Direction_2.equals = Direction_2_EE;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Direction_2.not_equals = Direction_2_EN;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Direction_2.ccw_in_between = Direction_2_M1;	YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Direction_2.deepcopy = Direction_2_M2;			used in many
cgal.Direction_2.delta = Direction_2_M3;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Direction_2.dx = Direction_2_M4;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Direction_2.dy = Direction_2_M5;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Direction_2.minus = Direction_2_MS;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Direction_2.toString = Direction_2_M6;			used in many
cgal.Direction_2.vector = Direction_2_M7;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF

cgal.Direction_3 = struct();
cgal.Direction_3.new = new_Direction_3;
cgal.Direction_3.delete = delete_Direction_3;
cgal.Direction_3.equals = Direction_3_EE;
cgal.Direction_3.not_equals = Direction_3_EN;
cgal.Direction_3.deepcopy = Direction_3_M1;
cgal.Direction_3.delta = Direction_3_M2;
cgal.Direction_3.dx = Direction_3_M3;
cgal.Direction_3.dy = Direction_3_M4;
cgal.Direction_3.dz = Direction_3_M5;
cgal.Direction_3.minus = Direction_3_MS;
cgal.Direction_3.toString = Direction_3_M6;
cgal.Direction_3.vector = Direction_3_M7;
cgal.Iso_cuboid_3 = struct();
cgal.Iso_cuboid_3.new = new_Iso_cuboid_3;
cgal.Iso_cuboid_3.delete = delete_Iso_cuboid_3;
cgal.Iso_cuboid_3.equals = Iso_cuboid_3_EE;
cgal.Iso_cuboid_3.not_equals = Iso_cuboid_3_EN;
cgal.Iso_cuboid_3.bbox = Iso_cuboid_3_M1;
cgal.Iso_cuboid_3.bounded_side = Iso_cuboid_3_M2;
cgal.Iso_cuboid_3.has_on_boundary = Iso_cuboid_3_M3;
cgal.Iso_cuboid_3.has_on_bounded_side = Iso_cuboid_3_M4;
cgal.Iso_cuboid_3.has_on_unbounded_side = Iso_cuboid_3_M5;
cgal.Iso_cuboid_3.is_degenerate = Iso_cuboid_3_M6;
cgal.Iso_cuboid_3.max = Iso_cuboid_3_M7;
cgal.Iso_cuboid_3.max_coord = Iso_cuboid_3_M8;
cgal.Iso_cuboid_3.min = Iso_cuboid_3_M9;
cgal.Iso_cuboid_3.min_coord = Iso_cuboid_3_M10;
cgal.Iso_cuboid_3.vertex = Iso_cuboid_3_M11;
cgal.Iso_cuboid_3.volume = Iso_cuboid_3_M12;
cgal.Iso_cuboid_3.xmax = Iso_cuboid_3_M13;
cgal.Iso_cuboid_3.xmin = Iso_cuboid_3_M14;
cgal.Iso_cuboid_3.ymax = Iso_cuboid_3_M15;
cgal.Iso_cuboid_3.ymin = Iso_cuboid_3_M16;
cgal.Iso_cuboid_3.zmax = Iso_cuboid_3_M17;
cgal.Iso_cuboid_3.zmin = Iso_cuboid_3_M18;
cgal.Iso_rectangle_2 = struct();
cgal.Iso_rectangle_2.new = new_Iso_rectangle_2;
cgal.Iso_rectangle_2.delete = delete_Iso_rectangle_2;
cgal.Iso_rectangle_2.equals = Iso_rectangle_2_EE;
cgal.Iso_rectangle_2.not_equals = Iso_rectangle_2_EN;
cgal.Iso_rectangle_2.area = Iso_rectangle_2_M1;
cgal.Iso_rectangle_2.bbox = Iso_rectangle_2_M2;
cgal.Iso_rectangle_2.bounded_side = Iso_rectangle_2_M3;
cgal.Iso_rectangle_2.has_on_boundary = Iso_rectangle_2_M4;
cgal.Iso_rectangle_2.has_on_bounded_side = Iso_rectangle_2_M5;
cgal.Iso_rectangle_2.has_on_unbounded_side = Iso_rectangle_2_M6;
cgal.Iso_rectangle_2.is_degenerate = Iso_rectangle_2_M7;
cgal.Iso_rectangle_2.max = Iso_rectangle_2_M8;
cgal.Iso_rectangle_2.max_coord = Iso_rectangle_2_M9;
cgal.Iso_rectangle_2.min = Iso_rectangle_2_M10;
cgal.Iso_rectangle_2.min_coord = Iso_rectangle_2_M11;
cgal.Iso_rectangle_2.vertex = Iso_rectangle_2_M12;
cgal.Iso_rectangle_2.xmax = Iso_rectangle_2_M13;
cgal.Iso_rectangle_2.xmin = Iso_rectangle_2_M14;
cgal.Iso_rectangle_2.ymax = Iso_rectangle_2_M15;
cgal.Iso_rectangle_2.ymin = Iso_rectangle_2_M16;

cgal.Line_2 = struct();
cgal.Line_2.new = new_Line_2;				YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.delete = delete_Line_2;				
cgal.Line_2.equals = Line_2_EE;				YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.not_equals = Line_2_EN;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.a = Line_2_M1;				YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.b = Line_2_M2;				YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.c = Line_2_M3;				YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.deepcopy = Line_2_M4;				used in many
cgal.Line_2.direction = Line_2_M5;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.has_on = Line_2_M6;				YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.has_on_negative_side = Line_2_M7;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.has_on_positive_side = Line_2_M8;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.is_degenerate = Line_2_M9;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.is_horizontal = Line_2_M10;				issue
cgal.Line_2.is_vertical = Line_2_M11;				issue
cgal.Line_2.opposite = Line_2_M12;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.oriented_side = Line_2_M13;				Not Available
cgal.Line_2.perpendicular = Line_2_M14;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.point = Line_2_M15;				YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.projection = Line_2_M16;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.toString = Line_2_M17;				used in many
cgal.Line_2.to_vector = Line_2_M18;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Line_2.x_at_y = Line_2_M19;				Not Avaliable
cgal.Line_2.y_at_x = Line_2_M20;				Not Available

cgal.Line_3 = struct();
cgal.Line_3.new = new_Line_3;
cgal.Line_3.delete = delete_Line_3;
cgal.Line_3.equals = Line_3_EE;
cgal.Line_3.not_equals = Line_3_EN;
cgal.Line_3.deepcopy = Line_3_M1;
cgal.Line_3.direction = Line_3_M2;
cgal.Line_3.has_on = Line_3_M3;
cgal.Line_3.is_degenerate = Line_3_M4;
cgal.Line_3.opposite = Line_3_M5;
cgal.Line_3.perpendicular_plane = Line_3_M6;
cgal.Line_3.point = Line_3_M7;
cgal.Line_3.projection = Line_3_M8;
cgal.Line_3.toString = Line_3_M9;
cgal.Line_3.to_vector = Line_3_M10;
cgal.Origin = struct();
cgal.Origin.new = new_Origin;
cgal.Origin.delete = delete_Origin;
cgal.Origin.plus = Origin_MA;
cgal.Origin.minus = Origin_MS;
cgal.Plane_3 = struct();
cgal.Plane_3.new = new_Plane_3;
cgal.Plane_3.delete = delete_Plane_3;
cgal.Plane_3.equals = Plane_3_EE;
cgal.Plane_3.not_equals = Plane_3_EN;
cgal.Plane_3.a = Plane_3_M1;
cgal.Plane_3.b = Plane_3_M2;
cgal.Plane_3.base1 = Plane_3_M3;
cgal.Plane_3.base2 = Plane_3_M4;
cgal.Plane_3.c = Plane_3_M5;
cgal.Plane_3.d = Plane_3_M6;
cgal.Plane_3.deepcopy = Plane_3_M7;
cgal.Plane_3.has_on = Plane_3_M8;
cgal.Plane_3.has_on_negative_side = Plane_3_M9;
cgal.Plane_3.has_on_positive_side = Plane_3_M10;
cgal.Plane_3.is_degenerate = Plane_3_M11;
cgal.Plane_3.opposite = Plane_3_M12;
cgal.Plane_3.oriented_side = Plane_3_M13;
cgal.Plane_3.orthogonal_direction = Plane_3_M14;
cgal.Plane_3.orthogonal_vector = Plane_3_M15;
cgal.Plane_3.perpendicular_line = Plane_3_M16;
cgal.Plane_3.point = Plane_3_M17;
cgal.Plane_3.projection = Plane_3_M18;
cgal.Plane_3.toString = Plane_3_M19;
cgal.Plane_3.to_2d = Plane_3_M20;
cgal.Plane_3.to_3d = Plane_3_M21;


cgal.Point_2 = struct();		****************************
cgal.Point_2.new = new_Point_2;		****************************
cgal.Point_2.delete = delete_Point_2;	****************************
cgal.Point_2.lt = Point_2_CA;
cgal.Point_2.le = Point_2_CB;
cgal.Point_2.gt = Point_2_CC;
cgal.Point_2.ge = Point_2_CD;
cgal.Point_2.equals = Point_2_EE;	YSNFYSNFYSNFYSNFYSNFYSNFYSNF(compares with origin only)
cgal.Point_2.not_equals = Point_2_EN;	YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Point_2.bbox = Point_2_M1;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Point_2.deepcopy = Point_2_M2;	YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Point_2.plus = Point_2_MA;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Point_2.minus = Point_2_MS;	YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Point_2.set_coordinates = Point_2_M3;	YSNFYSNFYSNFYSNFYSNF
cgal.Point_2.toString = Point_2_M4;	YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Point_2.x = Point_2_M5;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Point_2.y = Point_2_M6;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF


cgal.Point_3 = struct();
cgal.Point_3.new = new_Point_3;
cgal.Point_3.delete = delete_Point_3;
cgal.Point_3.lt = Point_3_CA;
cgal.Point_3.le = Point_3_CB;
cgal.Point_3.gt = Point_3_CC;
cgal.Point_3.ge = Point_3_CD;
cgal.Point_3.equals = Point_3_EE;
cgal.Point_3.not_equals = Point_3_EN;
cgal.Point_3.bbox = Point_3_M1;
cgal.Point_3.deepcopy = Point_3_M2;
cgal.Point_3.plus = Point_3_MA;
cgal.Point_3.minus = Point_3_MS;
cgal.Point_3.set_coordinates = Point_3_M3;
cgal.Point_3.toString = Point_3_M4;
cgal.Point_3.x = Point_3_M5;
cgal.Point_3.y = Point_3_M6;
cgal.Point_3.z = Point_3_M7;
cgal.Polygon_2 = struct();
cgal.Polygon_2.new = new_Polygon_2;
cgal.Polygon_2.delete = delete_Polygon_2;
cgal.Polygon_2.equals = Polygon_2_EE;
cgal.Polygon_2.not_equals = Polygon_2_EN;
cgal.Polygon_2.area = Polygon_2_M1;
cgal.Polygon_2.bbox = Polygon_2_M2;
cgal.Polygon_2.bottom_vertex = Polygon_2_M3;
cgal.Polygon_2.bounded_side = Polygon_2_M4;
cgal.Polygon_2.clear = Polygon_2_M5;
cgal.Polygon_2.deepcopy = Polygon_2_M6;
cgal.Polygon_2.erase = Polygon_2_M7;
cgal.Polygon_2.has_on_boundary = Polygon_2_M8;
cgal.Polygon_2.has_on_bounded_side = Polygon_2_M9;
cgal.Polygon_2.has_on_negative_side = Polygon_2_M10;
cgal.Polygon_2.has_on_positive_side = Polygon_2_M11;
cgal.Polygon_2.has_on_unbounded_side = Polygon_2_M12;
cgal.Polygon_2.insert = Polygon_2_M13;
cgal.Polygon_2.is_cw_oriented = Polygon_2_M14;
cgal.Polygon_2.is_collinear_oriented = Polygon_2_M15;
cgal.Polygon_2.is_convex = Polygon_2_M16;
cgal.Polygon_2.is_ccw_oriented = Polygon_2_M17;
cgal.Polygon_2.is_empty = Polygon_2_M18;
cgal.Polygon_2.is_simple = Polygon_2_M19;
cgal.Polygon_2.left_vertex = Polygon_2_M20;
cgal.Polygon_2.orientation = Polygon_2_M21;
cgal.Polygon_2.oriented_side = Polygon_2_M22;
cgal.Polygon_2.push_back = Polygon_2_M23;
cgal.Polygon_2.reverse_orientation = Polygon_2_M24;
cgal.Polygon_2.right_vertex = Polygon_2_M25;
cgal.Polygon_2.set = Polygon_2_M26;
cgal.Polygon_2.size = Polygon_2_M27;
cgal.Polygon_2.toString = Polygon_2_M28;
cgal.Polygon_2.top_vertex = Polygon_2_M29;
cgal.Polygon_2.edges = Polygon_2_M30;
cgal.Polygon_2.edges_circulator = Polygon_2_M31;
cgal.Polygon_2.vertices = Polygon_2_M32;
cgal.Polygon_2.vertices_circulator = Polygon_2_M33;


cgal.Ray_2 = struct();
cgal.Ray_2.new = new_Ray_2;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Ray_2.delete = delete_Ray_2;
cgal.Ray_2.equals = Ray_2_EE;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Ray_2.not_equals = Ray_2_EN;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Ray_2.collinear_has_on = Ray_2_M1;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Ray_2.deepcopy = Ray_2_M2;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Ray_2.direction = Ray_2_M3;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Ray_2.has_on = Ray_2_M4;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Ray_2.is_degenerate = Ray_2_M5;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Ray_2.is_horizontal = Ray_2_M6;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Ray_2.is_vertical = Ray_2_M7;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Ray_2.opposite = Ray_2_M8;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Ray_2.point = Ray_2_M9;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Ray_2.source = Ray_2_M10;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Ray_2.supporting_line = Ray_2_M11;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Ray_2.toString = Ray_2_M12;		
cgal.Ray_2.to_vector = Ray_2_M13;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF


cgal.Ray_3 = struct();
cgal.Ray_3.new = new_Ray_3;
cgal.Ray_3.delete = delete_Ray_3;
cgal.Ray_3.equals = Ray_3_EE;
cgal.Ray_3.not_equals = Ray_3_EN;
cgal.Ray_3.deepcopy = Ray_3_M1;
cgal.Ray_3.direction = Ray_3_M2;
cgal.Ray_3.has_on = Ray_3_M3;
cgal.Ray_3.is_degenerate = Ray_3_M4;
cgal.Ray_3.opposite = Ray_3_M5;
cgal.Ray_3.point = Ray_3_M6;
cgal.Ray_3.source = Ray_3_M7;
cgal.Ray_3.supporting_line = Ray_3_M8;
cgal.Ray_3.toString = Ray_3_M9;
cgal.Ray_3.to_vector = Ray_3_M10;

cgal.Segment_2 = struct();
cgal.Segment_2.new = new_Segment_2;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.delete = delete_Segment_2;
cgal.Segment_2.equals = Segment_2_EE;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.not_equals = Segment_2_EN;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.bbox = Segment_2_M1;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.collinear_has_on = Segment_2_M2;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.deepcopy = Segment_2_M3;			
cgal.Segment_2.direction = Segment_2_M4;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.has_on = Segment_2_M5;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.is_degenerate = Segment_2_M6;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.is_horizontal = Segment_2_M7;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.is_vertical = Segment_2_M8;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.max = Segment_2_M9;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.min = Segment_2_M10;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.opposite = Segment_2_M11;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.point = Segment_2_M12;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.source = Segment_2_M13;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.squared_length = Segment_2_M14;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.supporting_line = Segment_2_M15;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.target = Segment_2_M16;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.toString = Segment_2_M17;			Used in many
cgal.Segment_2.to_vector = Segment_2_M18;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Segment_2.vertex = Segment_2_M19;			YSNFYSNFYSNFYSNFYSNFYSNFYSNF

cgal.Segment_3 = struct();
cgal.Segment_3.new = new_Segment_3;
cgal.Segment_3.delete = delete_Segment_3;
cgal.Segment_3.equals = Segment_3_EE;
cgal.Segment_3.not_equals = Segment_3_EN;
cgal.Segment_3.bbox = Segment_3_M1;
cgal.Segment_3.deepcopy = Segment_3_M2;
cgal.Segment_3.direction = Segment_3_M3;
cgal.Segment_3.has_on = Segment_3_M4;
cgal.Segment_3.is_degenerate = Segment_3_M5;
cgal.Segment_3.max = Segment_3_M6;
cgal.Segment_3.min = Segment_3_M7;
cgal.Segment_3.opposite = Segment_3_M8;
cgal.Segment_3.point = Segment_3_M9;
cgal.Segment_3.source = Segment_3_M10;
cgal.Segment_3.squared_length = Segment_3_M11;
cgal.Segment_3.supporting_line = Segment_3_M12;
cgal.Segment_3.target = Segment_3_M13;
cgal.Segment_3.toString = Segment_3_M14;
cgal.Segment_3.to_vector = Segment_3_M15;
cgal.Segment_3.vertex = Segment_3_M16;
cgal.Sphere_3 = struct();
cgal.Sphere_3.new = new_Sphere_3;
cgal.Sphere_3.delete = delete_Sphere_3;
cgal.Sphere_3.equals = Sphere_3_EE;
cgal.Sphere_3.not_equals = Sphere_3_EN;
cgal.Sphere_3.bbox = Sphere_3_M1;
cgal.Sphere_3.bounded_side = Sphere_3_M2;
cgal.Sphere_3.center = Sphere_3_M3;
cgal.Sphere_3.deepcopy = Sphere_3_M4;
cgal.Sphere_3.has_on = Sphere_3_M5;
cgal.Sphere_3.has_on_boundary = Sphere_3_M6;
cgal.Sphere_3.has_on_bounded_side = Sphere_3_M7;
cgal.Sphere_3.has_on_negative_side = Sphere_3_M8;
cgal.Sphere_3.has_on_positive_side = Sphere_3_M9;
cgal.Sphere_3.has_on_unbounded_side = Sphere_3_M10;
cgal.Sphere_3.is_degenerate = Sphere_3_M11;
cgal.Sphere_3.opposite = Sphere_3_M12;
cgal.Sphere_3.orientation = Sphere_3_M13;
cgal.Sphere_3.oriented_side = Sphere_3_M14;
cgal.Sphere_3.squared_radius = Sphere_3_M15;
cgal.Sphere_3.toString = Sphere_3_M16;
cgal.Tetrahedron_3 = struct();
cgal.Tetrahedron_3.new = new_Tetrahedron_3;
cgal.Tetrahedron_3.delete = delete_Tetrahedron_3;
cgal.Tetrahedron_3.equals = Tetrahedron_3_EE;
cgal.Tetrahedron_3.not_equals = Tetrahedron_3_EN;
cgal.Tetrahedron_3.bbox = Tetrahedron_3_M1;
cgal.Tetrahedron_3.bounded_side = Tetrahedron_3_M2;
cgal.Tetrahedron_3.deepcopy = Tetrahedron_3_M3;
cgal.Tetrahedron_3.has_on_boundary = Tetrahedron_3_M4;
cgal.Tetrahedron_3.has_on_bounded_side = Tetrahedron_3_M5;
cgal.Tetrahedron_3.has_on_negative_side = Tetrahedron_3_M6;
cgal.Tetrahedron_3.has_on_positive_side = Tetrahedron_3_M7;
cgal.Tetrahedron_3.has_on_unbounded_side = Tetrahedron_3_M8;
cgal.Tetrahedron_3.is_degenerate = Tetrahedron_3_M9;
cgal.Tetrahedron_3.orientation = Tetrahedron_3_M10;
cgal.Tetrahedron_3.oriented_side = Tetrahedron_3_M11;
cgal.Tetrahedron_3.toString = Tetrahedron_3_M12;
cgal.Tetrahedron_3.vertex = Tetrahedron_3_M13;
cgal.Tetrahedron_3.volume = Tetrahedron_3_M14;
cgal.Triangle_2 = struct();
cgal.Triangle_2.new = new_Triangle_2;
cgal.Triangle_2.delete = delete_Triangle_2;
cgal.Triangle_2.equals = Triangle_2_EE;
cgal.Triangle_2.not_equals = Triangle_2_EN;
cgal.Triangle_2.area = Triangle_2_M1;
cgal.Triangle_2.bbox = Triangle_2_M2;
cgal.Triangle_2.bounded_side = Triangle_2_M3;
cgal.Triangle_2.deepcopy = Triangle_2_M4;
cgal.Triangle_2.has_on_boundary = Triangle_2_M5;
cgal.Triangle_2.has_on_bounded_side = Triangle_2_M6;
cgal.Triangle_2.has_on_negative_side = Triangle_2_M7;
cgal.Triangle_2.has_on_positive_side = Triangle_2_M8;
cgal.Triangle_2.has_on_unbounded_side = Triangle_2_M9;
cgal.Triangle_2.is_degenerate = Triangle_2_M10;
cgal.Triangle_2.opposite = Triangle_2_M11;
cgal.Triangle_2.orientation = Triangle_2_M12;
cgal.Triangle_2.oriented_side = Triangle_2_M13;
cgal.Triangle_2.toString = Triangle_2_M14;
cgal.Triangle_2.vertex = Triangle_2_M15;
cgal.Triangle_3 = struct();
cgal.Triangle_3.new = new_Triangle_3;
cgal.Triangle_3.delete = delete_Triangle_3;
cgal.Triangle_3.equals = Triangle_3_EE;
cgal.Triangle_3.not_equals = Triangle_3_EN;
cgal.Triangle_3.bbox = Triangle_3_M1;
cgal.Triangle_3.deepcopy = Triangle_3_M2;
cgal.Triangle_3.has_on = Triangle_3_M3;
cgal.Triangle_3.is_degenerate = Triangle_3_M4;
cgal.Triangle_3.squared_area = Triangle_3_M5;
cgal.Triangle_3.supporting_plane = Triangle_3_M6;
cgal.Triangle_3.toString = Triangle_3_M7;
cgal.Triangle_3.vertex = Triangle_3_M8;


cgal.Vector_2 = struct();
cgal.Vector_2.new = new_Vector_2;		xxxxxxxxxxxxxxxxxxxxx(0,0 for l,r,s)
cgal.Vector_2.delete = delete_Vector_2;
cgal.Vector_2.equals = Vector_2_EE;		xxxxxxxxxxxxxxxxxxxxx(issue with Null)
cgal.Vector_2.not_equals = Vector_2_EN;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Vector_2.cartesian = Vector_2_M1;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF	
cgal.Vector_2.deepcopy = Vector_2_M2;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Vector_2.dimension = Vector_2_M3;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Vector_2.direction = Vector_2_M4;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Vector_2.normalize = Vector_2_M5;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Vector_2.times = Vector_2_MM;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Vector_2.itimes = Vector_2_NM;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF(what's Different)
cgal.Vector_2.plus = Vector_2_MA;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Vector_2.iplus = Vector_2_NA;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF(what's different)
cgal.Vector_2.minus = Vector_2_MS;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Vector_2.iminus = Vector_2_NS;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF(what's different)
cgal.Vector_2.div = Vector_2_MD;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Vector_2.idiv = Vector_2_ND;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF(what's different)
cgal.Vector_2.perpendicular = Vector_2_M6;	(No Orientation)
cgal.Vector_2.squared_length = Vector_2_M7;	YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Vector_2.toString = Vector_2_M8;		(Already used in most of the Tests)
cgal.Vector_2.x = Vector_2_M9;			xxxxxxxxxxxxxxxxxxxxx
cgal.Vector_2.y = Vector_2_M10;			xxxxxxxxxxxxxxxxxxxxx


cgal.Vector_3 = struct();
cgal.Vector_3.new = new_Vector_3;
cgal.Vector_3.delete = delete_Vector_3;
cgal.Vector_3.equals = Vector_3_EE;
cgal.Vector_3.not_equals = Vector_3_EN;
cgal.Vector_3.cartesian = Vector_3_M1;
cgal.Vector_3.deepcopy = Vector_3_M2;
cgal.Vector_3.dimension = Vector_3_M3;
cgal.Vector_3.direction = Vector_3_M4;
cgal.Vector_3.normalize = Vector_3_M5;
cgal.Vector_3.times = Vector_3_MM;
cgal.Vector_3.itimes = Vector_3_NM;
cgal.Vector_3.plus = Vector_3_MA;
cgal.Vector_3.iplus = Vector_3_NA;
cgal.Vector_3.minus = Vector_3_MS;
cgal.Vector_3.iminus = Vector_3_NS;
cgal.Vector_3.div = Vector_3_MD;
cgal.Vector_3.idiv = Vector_3_ND;
cgal.Vector_3.set_coordinates = Vector_3_M6;
cgal.Vector_3.squared_length = Vector_3_M7;
cgal.Vector_3.toString = Vector_3_M8;
cgal.Vector_3.x = Vector_3_M9;
cgal.Vector_3.y = Vector_3_M10;
cgal.Vector_3.z = Vector_3_M11;
cgal.Weighted_point_2 = struct();
cgal.Weighted_point_2.new = new_Weighted_point_2;
cgal.Weighted_point_2.delete = delete_Weighted_point_2;
cgal.Weighted_point_2.equals = Weighted_point_2_EE;
cgal.Weighted_point_2.not_equals = Weighted_point_2_EN;
cgal.Weighted_point_2.deepcopy = Weighted_point_2_M1;
cgal.Weighted_point_2.point = Weighted_point_2_M2;
cgal.Weighted_point_2.toString = Weighted_point_2_M3;
cgal.Weighted_point_2.weight = Weighted_point_2_M4;
cgal.Weighted_point_2.x = Weighted_point_2_M5;
cgal.Weighted_point_2.y = Weighted_point_2_M6;
cgal.Weighted_point_3 = struct();
cgal.Weighted_point_3.new = new_Weighted_point_3;
cgal.Weighted_point_3.delete = delete_Weighted_point_3;
cgal.Weighted_point_3.equals = Weighted_point_3_EE;
cgal.Weighted_point_3.not_equals = Weighted_point_3_EN;
cgal.Weighted_point_3.deepcopy = Weighted_point_3_M1;
cgal.Weighted_point_3.point = Weighted_point_3_M2;
cgal.Weighted_point_3.toString = Weighted_point_3_M3;
cgal.Weighted_point_3.weight = Weighted_point_3_M4;
cgal.Weighted_point_3.x = Weighted_point_3_M5;
cgal.Weighted_point_3.y = Weighted_point_3_M6;
cgal.Weighted_point_3.z = Weighted_point_3_M7;


cgal.Arrangement_2 = struct();
cgal.Arrangement_2.new = new_Arrangement_2;		YSNFYSNFYSNFYSNFYSNFYSNF
cgal.Arrangement_2.delete = delete_Arrangement_2;
cgal.Arrangement_2.deepcopy = Arrangement_2_M1;		YSNFYSNFYSNFYSNFYSNFYSNF
cgal.Arrangement_2.clear = Arrangement_2_M2;		YSNFYSNFYSNFYSNFYSNFYSNF(all in new)
cgal.Arrangement_2.is_empty = Arrangement_2_M3;		YSNFYSNFYSNFYSNFYSNFYSNF
cgal.Arrangement_2.number_of_vertices = Arrangement_2_M4;	YSNFYSNFYSNFYSNF
cgal.Arrangement_2.number_of_isolated_verti = Arrangement_2_M5;	YSNFYSNFYSNFYSNF
cgal.Arrangement_2.vertices_begin = Arrangement_2_M6;		Not Available
cgal.Arrangement_2.vertices_end = Arrangement_2_M7;		Not Available
cgal.Arrangement_2.number_of_vertices_infi = Arrangement_2_M8;	YSNFYSNFYSNFYSNF
cgal.Arrangement_2.number_of_halfedges = Arrangement_2_M9;	YSNFYSNFYSNFYSNF
cgal.Arrangement_2.halfedges_begin = Arrangement_2_M10;		Not Available
cgal.Arrangement_2.halfedges_end = Arrangement_2_M11;		Not Available
cgal.Arrangement_2.number_of_edges = Arrangement_2_M12;		YSNFYSNFYSNFYSNF
cgal.Arrangement_2.edges_end = Arrangement_2_M13;		Not Available
cgal.Arrangement_2.edges_begin = Arrangement_2_M14;		Not Available
cgal.Arrangement_2.unbounded_face = Arrangement_2_M15;		YSNFYSNFYSNFYSNF
cgal.Arrangement_2.number_of_faces = Arrangement_2_M16;		YSNFYSNFYSNFYSNF
cgal.Arrangement_2.faces_end = Arrangement_2_M17;		Not Available
cgal.Arrangement_2.faces_begin = Arrangement_2_M18;		Not Available
cgal.Arrangement_2.number_of_unbounded_face = Arrangement_2_M19;YSNFYSNFYSNFYSNF
cgal.Arrangement_2.unbounded_faces_end = Arrangement_2_M20;	Not Available
cgal.Arrangement_2.unbounded_faces_begin = Arrangement_2_M21;	Not Available
cgal.Arrangement_2.fictitious_face = Arrangement_2_M22;		YSNFYSNFYSNFYSNF
cgal.Arrangement_2.insert_in_face_interior = Arrangement_2_M23;	YSNFYSNFYSNFYSNF
cgal.Arrangement_2.insert_from_left_vertex = Arrangement_2_M24;	YSNFYSNFYSNFYSNF(NO)
cgal.Arrangement_2.insert_from_right_vertex = Arrangement_2_M25;YSNFYSNFYSNFYSNF(NO)
cgal.Arrangement_2.insert_at_vertices = Arrangement_2_M26;
cgal.Arrangement_2.modify_vertex = Arrangement_2_M27;		YSNFYSNFYSNFYSNF
cgal.Arrangement_2.modify_edge = Arrangement_2_M28;		YSNFYSNFYSNFYSNF
cgal.Arrangement_2.split_edge = Arrangement_2_M29;
cgal.Arrangement_2.remove_isolated_vertex = Arrangement_2_M30;	YSNFYSNFYSNFYSNF
cgal.Arrangement_2.merge_edge = Arrangement_2_M31;
cgal.Arrangement_2.remove_edge = Arrangement_2_M32;		YSNFYSNFYSNFYSNF
cgal.Arrangement_2.is_valid = Arrangement_2_M33;		YSNFYSNFYSNFYSNF

No Overloading for Curve_2, every input it takes it converts it into Segment!
cgal.Curve_2 = struct();
cgal.Curve_2.new = new_Curve_2;			xxxxxxxxxxxxxxxxxxxxxx(return Segements only)
cgal.Curve_2.delete = delete_Curve_2;		
cgal.Curve_2.source = Curve_2_M1;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Curve_2.target = Curve_2_M2;		YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Curve_2.line = Curve_2_M3;			xxxxxxxxxxxxxxxxxxxxxx
cgal.Curve_2.supporting_line = Curve_2_M4;	YSNFYSNFYSNFYSNFYSNFYSNFYSNF
cgal.Curve_2.ray = Curve_2_M5;			xxxxxxxxxxxxxxxxxxxxxx(Not Working)
cgal.Curve_2.segment = Curve_2_M6;		xxxxxxxxxxxxxxxxxxxxxx(Not Working)
cgal.Curve_2.is_segment = Curve_2_M7;		xxxxxxxxxxxxxxxxxxxxxx
cgal.Curve_2.is_ray = Curve_2_M8;		xxxxxxxxxxxxxxxxxxxxxx
cgal.Curve_2.is_line = Curve_2_M9;		xxxxxxxxxxxxxxxxxxxxxx
cgal.Curve_2.deepcopy = Curve_2_M10;		xxxxxxxxxxxxxxxxxxxxxx

